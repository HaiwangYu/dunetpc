#include "geometry_dune.fcl"
#include "detectorproperties_dune.fcl"
#include "larproperties_dune.fcl"
#include "messageservice.fcl"
#include "simulationservices_dune.fcl"
#include "seedservice_dune.fcl"
#include "detectorclocks_dune.fcl"
//#include "photpropservices_dune.fcl"
//#include "opticaldetectorservices_dune.fcl"
#include "channelmapping_dune.fcl"
#include "channelstatus_dune.fcl"
#include "channelstatus_pdsp.fcl"
#include "detsimmodules_dune.fcl"
#include "spacecharge_dune.fcl"
#include "channelstatus_pdsp.fcl"
#include "PdspChannelMapService.fcl"
#include "larfft_dune.fcl"
#include "databaseutil_dune.fcl"
#include "backtrackerservice.fcl"
#include "particleinventoryservice.fcl" 
#include "signalservices_dune.fcl"
#include "sam_dune.fcl"
#include "pedestals_dune.fcl"
#include "magfield_larsoft.fcl"
#include "dataprep_dune.fcl"
#include "xyzcalib_dune.fcl"

BEGIN_PROLOG

# The above *_dune.fcl include contain the parameter blocks
# for all dune geometries. All PROLOG files for dune should
# contain all of the parameters for each dune geometry so
# that they are in one place and there is only one type of
# file to include. This file is an example of that


##############################
### ProtoDUNE Single Phase ###
##############################

protodune_simulation_services: {
 LArFFT:                       @local::dunefd_larfft
 LArG4Parameters:                @local::protodune_largeantparameters
 ExptGeoHelperInterface:         @local::dune_geometry_helper
 Geometry:                       @local::protodune_geo
 DetectorClocksService:          @local::protodune_detectorclocks
 DetectorPropertiesService:      @local::protodune_detproperties
 LArPropertiesService:           @local::dunefd_properties
 DatabaseUtil:                 @local::dunefd_database
 LArVoxelCalculator:           @local::dunefd_larvoxelcalculator
 MagneticField:                @local::no_mag_larsoft
 SpaceCharge:                  @local::protodune_spacecharge
 NuRandomService:                @local::dune_seedservice
 SignalShapingServiceDUNE:     @local::protodunesp_signalshapingservice
# PhotonVisibilityService:      @local::protodune_photonvisibilityservice
# OpDetResponseInterface:       @local::protodune_opdetresponse
 ChannelStatusService:         @local::dunefd_channel_status
}


# Settings for optical simulation in the FD. Optical simulation not on by default
# for FD, turned on by custom physics list and defining a photon visibility
# services is workspace g4 fhicl file.

protodune_simulation_services.LArPropertiesService.ScintYield: 		24000
protodune_simulation_services.LArPropertiesService.EnableCerenkovLight: 	false
protodune_simulation_services.LArPropertiesService.ScintPreScale: 	1
#protodune_simulation_services.OpDetResponseInterface.QuantumEfficiency: 	1.0


##############################
### ProtoDUNE Single Phase ###
##############################

protodune_services: {
 ExptGeoHelperInterface:       @local::dune_geometry_helper
 Geometry:                     @local::protodune_geo
 DetectorClocksService:        @local::protodune_detectorclocks
 DetectorPropertiesService:    @local::protodune_detproperties
 LArPropertiesService:         @local::dunefd_properties
 LArFFT:                       @local::dunefd_larfft
 DatabaseUtil:                 @local::dunefd_database
 BackTrackerService:           @local::dunefd_backtrackerservice
 ParticleInventoryService:     @local::standard_particleinventoryservice
# PhotonBackTrackerService:     @local::dunefd_photonbacktrackerservice
 SpaceCharge:                  @local::protodune_spacecharge
 NuRandomService:              @local::dune_seedservice
 SignalShapingServiceDUNE:     @local::protodunesp_signalshapingservice
 ChannelStatusService:         @local::dunefd_channel_status
 ChannelGroupService:          @local::changroup_apa_pd_drop_outer
}

# Reco services for ProtoDUNE simulation.
protodune_reco_services:                            @local::protodune_services
protodune_reco_services.RawDigitExtractService:     @local::rdx_std
protodune_reco_services.RawDigitPrepService:        @local::adcprep_with_services_sim
protodune_reco_services.AdcDeconvolutionService:    @local::adcdco_dunefd
protodune_reco_services.AdcRoiBuildingService:      @local::adcroi_dunefd
protodune_reco_services.AdcWireBuildingService:     @local::adcwire_std
# Switch to tool-based dataprep for ProtoDUNE simulation.
# Comment out the the following line to go back to the service-based dataprep.
protodune_reco_services.RawDigitPrepService:        @local::adcprep_with_tools_sim
# xyz calibration service
protodune_reco_services.XYZCalibService:            @local::protodune_xyzcalib
# channel map service
protodune_reco_services.PdspChannelMapService:      @local::pdspchannelmap

# Reco services for ProtoDUNE data
protodune_data_reco_services:                       @local::protodune_reco_services
# Get rid of low frequency noise
protodune_data_reco_services.SignalShapingServiceDUNE.IndUFilter: "(x>0.01)*gaus"
protodune_data_reco_services.SignalShapingServiceDUNE.IndVFilter: "(x>0.01)*gaus"
# Use channel service for data
protodune_data_reco_services.ChannelStatusService: @local::pdsp_channel_status
# Make sure we can use cryostat-side APA hits
protodune_data_reco_services.ChannelGroupService.ApaRops: []

# Add the photon detector calibrator service
#protodune_data_reco_services.IPhotonCalibrator:    @local::protodunesp_photoncalibrator

# ProtoDUNE detector properties service
protodune_data_reco_services.DetectorPropertiesService: @local::protodunesp_detproperties
# Finally, add the tools
## No calibration, no noise removal.
protodune_dataprep_tools_nocal: [
  "digitReader",                # Read RawDigit
  "pd_adcPedestalFit",          # Find pedestal
  "adcSampleFiller",            # Subtract pedestal, trivial calibration
  "pdsp_sticky_codes_ped",      # Flag sticky codes
  "pdsp_adcMitigate",           # Mitigate sticky codes
  "pdsp_timingMitigate",        # Mitigate FEMB302 timing
  "adcCorrectUndershootAdc",    # correct undershoot
  "adcKeepAllSignalFinder"      # Keep all signal (no ROIs)
]
## Charge calibration, no noise removal.
protodune_dataprep_tools_calib: [
  "digitReader",                # Read RawDigit
  "pd_adcPedestalFit",          # Find pedestal
  "adcSampleCalibration",       # Subtract pedestal and apply charge calibration
  "pdsp_sticky_codes_ped",      # Flag sticky codes
  "pdsp_adcMitigate",           # Mitigate sticky codes
  "pdsp_timingMitigate",        # Mitigate FEMB302 timing
  "adcCorrectUndershootKe",     # correct undershoot
  "adcKeepAllSignalFinder",     # Keep all signal (no ROIs)
  "adcScaleKeToAdc"             # Scale samples to nominal ADC counts
]
## Charge calibration, noise removal.
protodune_dataprep_tools_calib_noiserem: [
  "digitReader",                # Read RawDigit
  "pd_adcPedestalFit",          # Find pedestal
  "adcSampleCalibration",       # Subtract pedestal and apply charge calibration
  "pdsp_sticky_codes_ped",      # Flag sticky codes
  "pdsp_adcMitigate",           # Mitigate sticky codes
  "pdsp_timingMitigate",        # Mitigate FEMB302 timing
  "adcCorrectUndershootKe",     # correct undershoot
  "pdsp_noiseRemovalKe",        # Remove high frequency noise and coherent noise
  "adcKeepAllSignalFinder",     # Keep all signal (no ROIs)
  "adcScaleKeToAdc"             # Scale samples to nominal ADC counts
]
## Set a default here.
protodune_data_reco_services.RawDigitPrepService.AdcChannelToolNames: @local::protodune_dataprep_tools_calib

########################
### lardet ###
########################

lardet_simulation_services: {
 LArG4Parameters:                @local::protodune_largeantparameters
# ExptGeoHelperInterface:         @local::dune_geometry_helper
 NuRandomService:                @local::dune_seedservice
 Geometry:                       @local::lardet_geo
 DetectorClocksService:          @local::dunedphase3x1x1_detectorclocks
 DetectorPropertiesService:      @local::dphase3x1x1_detproperties
 LArPropertiesService:           @local::dunefddphase_properties
 SpaceCharge:                    @local::dphase3x1x1_spacecharge
}


# Settings for optical simulation in the FD. Optical simulation not on by default
# for FD, turned on by custom physics list and defining a photon visibility
# services is workspace g4 fhicl file.

lardet_simulation_services.LArPropertiesService.ScintYield: 		24000
lardet_simulation_services.LArPropertiesService.EnableCerenkovLight: 	false
lardet_simulation_services.LArPropertiesService.ScintPreScale: 	1
//dunedphase3x1x1_simulation_services.OpDetResponseInterface.QuantumEfficiency: 	1.0


########################
### Message Services ###
########################

dune_message_services: {
  debugModules: ["*"]
  destinations: {
    LogDebugFile: {
      type:       "file"
      filename:   "debug.log"
      append:     false
      threshold:  "DEBUG"
      categories:{
        default:{ limit: 0 }
      }
    }
    LogStandardOut: {
      type:       "cout"
      threshold:  "WARNING"
      categories:{
        default:{ }
        RecoBaseDefaultCtor: { limit: 0 }
        AnaBaseDefaultCtor:  { limit: 0 }
        GeometryBadInputPoint: { limit: 5 timespan: 1000}
      }
    }
    LogStandardError: {
      type:       "cerr"
      threshold:  "ERROR"
      categories:{
        default:{ }
      }
    }
  }
}

dune_message_services_prod_debug: {
  debugModules: ["*"]
  destinations: {
    LogDebugFile:      @local::dune_message_services.destinations.LogDebugFile
    LogStandardOut:    @local::dune_message_services.destinations.LogStandardOut
    LogStandardError:  @local::dune_message_services.destinations.LogStandardError
  }
}

dune_message_services_prod_debug.destinations.LogDebugFile.categories:{
  default: { }
 
}


dune_message_services_prod: {
  debugModules: ["*"]
  destinations: {
    LogDebugFile: {
      type:       "file"
      filename:   "debugprod.log"
      append:     false
      threshold:  "DEBUG"
      categories:{
        default:{ limit: 0 }
      }
    }
    LogStandardOut: {
      type:       "cout"
      threshold:  "INFO"
      categories:{
        ArtReport: {limit: -1}
        default:{limit: 0}
      }
    }
    LogStandardError: {
      type:       "cerr"
      threshold:  "ERROR"
      categories:{
        default:{}
      }
    }
  }
}

dune_message_services_interactive: {
  debugModules: ["*"]
  destinations: {
    LogDebugFile:      @local::dune_message_services.destinations.LogDebugFile
    LogStandardOut:    @local::dune_message_services.destinations.LogStandardOut
    LogStandardError:  @local::dune_message_services.destinations.LogStandardError
  }
}
dune_message_services_interactive.destinations.LogStandardOut.threshold:  "INFO"
dune_message_services_interactive.destinations.LogStandardOut.categories:{
  default: { limit: 0 }
}
dune_message_services_interactive.destinations.LogStandardError.threshold:  "WARNING"
dune_message_services_interactive.destinations.LogStandardError.categories: {
  default: { }
  RecoBaseDefaultCtor: { limit: 1 }
  AnaBaseDefaultCtor:  { limit: 1 }
  GeometryBadInputPoint: { limit: 5 timespan: 1000}
}

END_PROLOG
