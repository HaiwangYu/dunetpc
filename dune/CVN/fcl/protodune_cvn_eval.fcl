#include "services_dune.fcl"
#include "CVNMapper.fcl"
#include "CVNEvaluator.fcl"

process_name: protoEval

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "cvn_event_dump_r%r_s%s_hist.root"
                  closeFileFast: false }
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_simulation_services
  #@table::standard_services
}

#services.BackTracker: @local::standard_backtracker

# Input source is a ROOT file 
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create

}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  # Declare the modules
  producers:
  { 
    cvnmap:     @local::standard_cvnmapper_protodune
    cvneval:    @local::standard_cvnevaluator_protodune
  }

  # Build the paths
  map: [ cvnmap,cvneval ]

}

physics.producers.cvnmap.TrackLabel: "pandora"
physics.producers.cvnmap.ShowerLabel: "pandora"
physics.producers.cvnmap.TimeResolution: 1600
physics.producers.cvnmap.WireLength: 2880
physics.producers.cvnmap.TdcWidth: 500
physics.producers.cvnmap.IsProtoDUNE: true
physics.producers.cvnmap.TrackLengthCut: 100
########################################################################

