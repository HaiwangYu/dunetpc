#include "services_dune.fcl"
#include "BeamDQM.fcl"
#include "RawDecoding/RunRawDecoder.fcl"

process_name: BeamDQM

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  #FileCatalogMetadata:  @local::art_file_catalog_mc
  #                      @table::protodune_services
  ExptGeoHelperInterface:       @local::dune_geometry_helper
  Geometry:                     @local::protodune_geo
  DetectorClocksService:        @local::dunefd_detectorclocks
  DetectorPropertiesService:    @local::protodune_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft  
  DatabaseUtil:                 @local::dunefd_database
  ChannelStatusService:         @local::dunefd_channel_status

  TFileService: { #closeFileFast: true
                  fileName: "beamdqm_hist.root" #can be overridden by '-T'
                }
  IFBeam:            {}
}
services.message.destinations.LogStandardOut.threshold: "INFO"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  #fileNames: [""]
}

physics:
{
 producers:
 {
  ctbrawdecoder:    @local::ctb_raw_decoder
#  beamevent:          @local::proto_beamevent
 }

 analyzers:
 {
  beamdqm:           @local::proto_beamdqm
 }

# produce:  [ timingrawdecoder, ctbrawdecoder, beamevent ]
 produce:  [ ctbrawdecoder]
 ana:      [ beamdqm ]

 trigger_paths:     [ produce ]
 end_paths:         [ ana ]
}

physics.analyzers.beamdqm.ValidWindow:           100

physics.analyzers.beamdqm.CKov1:               "XCET022713"
physics.analyzers.beamdqm.CKov2:               "XCET022716"

physics.analyzers.beamdqm.XCETPrefix:           "dip/acc/NORTH/NP04/BI/XCET/"
