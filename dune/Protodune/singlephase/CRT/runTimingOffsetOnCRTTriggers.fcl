#include "services_dune.fcl"
#include "CRT.fcl"
#include "ProtoDUNETriggerFilter.fcl"

process_name: CRTTimingOffset

services:
{
  # Load the service that manages root files for histograms.
  #TFileService: { fileName: "HelloAuxDet_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_services
  TFileService:      { fileName: "CRT-TimingOffsets.root" }
  IFBeam:            {}
}

#dune_message_services_prod_debug.destinations.LogWarningFile.categories:
#{
#  timeToHits: { limit: 1000 }
#  CreateTrigger: { limit: 1000 }
#  moduleToChannels: { limit: 1000 }
#}

source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{
  filters:
  {
    crtOnly: @local::pdsp_trigfilter_crt
  }

  triggersAllowed: [crtOnly]

  analyzers:
  {
    timing: @local::CRTTimeOffset_standard
  }

  ana:  [ timing ]
 
  end_paths:     [ ana ]
}

timing.SelectEvents: [triggersAllowed] #Select only events triggered because of CRT activity.  
