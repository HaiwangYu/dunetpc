#include "services_dune.fcl"
#include "DetProptest.fcl"


process_name: DetProptest

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  #FileCatalogMetadata:  @local::art_file_catalog_mc
  #                      @table::protodune_services
  ExptGeoHelperInterface:       @local::dune_geometry_helper
  Geometry:                     @local::protodune_geo
  DetectorClocksService:        @local::dunefd_detectorclocks
  DetectorPropertiesService:    @local::protodunesp_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft  
  DatabaseUtil:                 @local::dunefd_database
  ChannelStatusService:         @local::dunefd_channel_status

  TFileService: { #closeFileFast: true
                  fileName: "beamevent_hist.root" #can be overridden by '-T'
                }
  IFBeam:            {}
}
services.message.destinations.LogStandardOut.threshold: "INFO"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  #fileNames: [""]
}

outputs:
{
 out1:
  {
    module_type: RootOutput
    fileName:    "beam_event.root" #default file name, can override from command line with -o or --output
    dataTier:    "reconstructed"
    
  }
}

physics:
{
 analyzers:
 {
  anadet: @local::DetProptest

 }


 ana: [ anadet ]

 end_paths:         [ ana ]
}


